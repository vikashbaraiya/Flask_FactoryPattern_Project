"""initial

Revision ID: 0994ac2c49e8
Revises: 
Create Date: 2024-11-28 12:58:13.521753

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '0994ac2c49e8'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exchange_pair',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ex_pair_list', sa.JSON(), nullable=True),
    sa.Column('exchange_name', sa.String(length=100), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('roles',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('symbol', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('first_name', sa.String(length=50), nullable=False),
    sa.Column('last_name', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('password_hash', sa.String(length=128), nullable=False),
    sa.Column('confirmed', sa.Boolean(), nullable=True),
    sa.Column('otp', sa.String(length=6), nullable=True),
    sa.Column('otp_generated_at', sa.DateTime(), nullable=True),
    sa.Column('file_name', sa.String(length=500), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('accounts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('default', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'user_id', name='unique_account_user')
    )
    op.create_table('user_roles',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('role_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'role_id')
    )
    op.create_table('credentials',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('connector_name', sa.String(length=100), nullable=False),
    sa.Column('details', sa.JSON(), nullable=True),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bot_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('credential_id', sa.Integer(), nullable=False),
    sa.Column('bot_name', sa.String(length=100), nullable=False),
    sa.Column('trading_pair', sa.String(length=100), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('bot_strategy', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['credential_id'], ['credentials.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('exchanges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('credential_id', sa.Integer(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['credential_id'], ['credentials.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('account_exchange_tokens',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=False),
    sa.Column('exchange_id', sa.Integer(), nullable=False),
    sa.Column('token_id', sa.Integer(), nullable=False),
    sa.Column('units', sa.Float(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.Column('available_units', sa.Float(), nullable=False),
    sa.Column('deleted', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['account_id'], ['accounts.id'], ),
    sa.ForeignKeyConstraint(['exchange_id'], ['exchanges.id'], ),
    sa.ForeignKeyConstraint(['token_id'], ['tokens.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('account_id', 'exchange_id', 'token_id', name='unique_account_exchange_token')
    )
    op.create_table('bot_data',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('bot_detail_id', sa.Integer(), nullable=False),
    sa.Column('bot_name', sa.String(length=255), nullable=False),
    sa.Column('connector_name', sa.String(length=255), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('status', sa.String(length=50), nullable=False),
    sa.Column('trading_pair', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['bot_detail_id'], ['bot_details.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bot_trade_history',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('bot_detail_id', sa.Integer(), nullable=False),
    sa.Column('market', sa.String(length=50), nullable=False),
    sa.Column('trade_id', sa.String(length=50), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('quantity', sa.Float(), nullable=False),
    sa.Column('symbol', sa.String(length=50), nullable=False),
    sa.Column('trade_timestamp', sa.BigInteger(), nullable=False),
    sa.Column('trade_type', sa.String(length=50), nullable=False),
    sa.Column('base_asset', sa.String(length=50), nullable=False),
    sa.Column('quote_asset', sa.String(length=50), nullable=False),
    sa.Column('raw_json', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['bot_detail_id'], ['bot_details.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('performances',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('bot_id', sa.Integer(), nullable=True),
    sa.Column('bot_name', sa.String(), nullable=True),
    sa.Column('close_type_counts', sa.JSON(), nullable=True),
    sa.Column('global_pnl_pct', sa.String(), nullable=True),
    sa.Column('global_pnl_quote', sa.String(), nullable=True),
    sa.Column('inventory_imbalance', sa.String(), nullable=True),
    sa.Column('open_order_volume', sa.String(), nullable=True),
    sa.Column('realized_pnl_pct', sa.String(), nullable=True),
    sa.Column('realized_pnl_quote', sa.String(), nullable=True),
    sa.Column('unrealized_pnl_pct', sa.String(), nullable=True),
    sa.Column('unrealized_pnl_quote', sa.String(), nullable=True),
    sa.Column('volume_traded', sa.String(), nullable=True),
    sa.Column('status', sa.String(length=50), nullable=True),
    sa.ForeignKeyConstraint(['bot_id'], ['bot_details.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('error_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.Column('level_name', sa.String(length=50), nullable=False),
    sa.Column('msg', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bot_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('general_logs',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bot_id', sa.Integer(), nullable=False),
    sa.Column('level_name', sa.String(length=50), nullable=False),
    sa.Column('msg', sa.Text(), nullable=False),
    sa.Column('timestamp', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['bot_id'], ['bot_data.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('general_logs')
    op.drop_table('error_logs')
    op.drop_table('performances')
    op.drop_table('bot_trade_history')
    op.drop_table('bot_data')
    op.drop_table('account_exchange_tokens')
    op.drop_table('exchanges')
    op.drop_table('bot_details')
    op.drop_table('credentials')
    op.drop_table('user_roles')
    op.drop_table('accounts')
    op.drop_table('users')
    op.drop_table('tokens')
    op.drop_table('roles')
    op.drop_table('exchange_pair')
    # ### end Alembic commands ###
